name: Docker Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  FLY_REGISTRY: registry.fly.io
  IMAGE_NAME: ${{ github.repository }}
  FLY_APP: quikbroker

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        # image: [app, migration]
        image: [app]
        include:
          - image: app
            dockerfile: ./packages/app/Dockerfile
          # - image: migration
          #   dockerfile: ./packages/migration/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Fly.io Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.FLY_REGISTRY }}
          username: ${{ secrets.FLY_API_TOKEN }}
          password: x

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
          labels: |
            org.opencontainers.image.title=${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.image }} image for QuikBroker
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.visibility=private

      - name: Build and push Docker image to GitHub Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}:buildcache,mode=max

      - name: Tag and push to Fly.io Registry
        run: |
          # Get the latest tag from the metadata
          LATEST_TAG=latest  # $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | grep 'latest' || echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | head -n1)
          
          # Pull the image from GitHub Registry
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}:$LATEST_TAG
          
          # Tag for Fly.io Registry
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}:$LATEST_TAG ${{ env.FLY_REGISTRY }}/${{ env.FLY_APP }}:$LATEST_TAG
          
          echo "Pushing to Fly.io Registry line:" ${{ env.FLY_REGISTRY }}/${{ env.FLY_APP }}:$LATEST_TAG

          # Push to Fly.io Registry
          docker push ${{ env.FLY_REGISTRY }}/${{ env.FLY_APP }}:$LATEST_TAG

      - name: Deploy to Fly.io
        if: github.ref == 'refs/heads/main'
        run: |
          # Install flyctl
          curl -L https://fly.io/install.sh | sh
          
          # Deploy using the image we just pushed
          LATEST_TAG=latest  # $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | grep 'latest' || echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | head -n1)
          flyctl deploy --image ${{ env.FLY_REGISTRY }}/${{ env.FLY_APP }}:$LATEST_TAG --app ${{ env.FLY_APP }}
