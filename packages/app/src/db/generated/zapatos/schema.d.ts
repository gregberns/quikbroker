/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2023 George MacKerron
Released under the MIT licence: see LICENCE file
*/

/* eslint-disable */
// @ts-nocheck

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 104 }


  /* === schema: 0 === */

  export namespace schema0 {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
    /* (none) */
  
    /* --- aggregate types --- */
  
    // `never` rather than `any` types would be more accurate in this no-tables case, but they stop `shortcuts.ts` compiling
  
    export type Table = never;
    export type Selectable = never;
    export type JSONSelectable = never;
    export type Whereable = never;
    export type Insertable = never;
    export type Updatable = never;
    export type UniqueIndex = never;
    export type Column = never;
  
    export type AllBaseTables = [];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [];
  }


  /* === global aggregate types === */

  export type Schema = '0';
  export type Table = schema0.Table;
  export type Selectable = schema0.Selectable;
  export type JSONSelectable = schema0.JSONSelectable;
  export type Whereable = schema0.Whereable;
  export type Insertable = schema0.Insertable;
  export type Updatable = schema0.Updatable;
  export type UniqueIndex = schema0.UniqueIndex;
  export type Column = schema0.Column;

  export type AllSchemas = ['0'];
  export type AllBaseTables = [...schema0.AllBaseTables];
  export type AllForeignTables = [...schema0.AllForeignTables];
  export type AllViews = [...schema0.AllViews];
  export type AllMaterializedViews = [...schema0.AllMaterializedViews];
  export type AllTablesAndViews = [...schema0.AllTablesAndViews];


  /* === lookups === */

  export type SelectableForTable<T extends Table> = any;

  export type JSONSelectableForTable<T extends Table> = any;

  export type WhereableForTable<T extends Table> = any;

  export type InsertableForTable<T extends Table> = any;

  export type UpdatableForTable<T extends Table> = any;

  export type UniqueIndexForTable<T extends Table> = any;

  export type ColumnForTable<T extends Table> = any;

  export type SQLForTable<T extends Table> = any;

}
